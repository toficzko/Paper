From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sat, 28 Jul 2018 12:18:27 -0400
Subject: [PATCH] Ignore Dead Entities in entityList iteration

A spigot change delays removal of entities from the entity list.
This causes a change in behavior from Vanilla where getEntities type
methods will return dead entities that they shouldn't otherwise be doing.

This will ensure that dead entities are skipped from iteration since
they shouldn't of been in the list in the first place.

diff --git a/src/main/java/io/papermc/paper/PaperCommand.java b/src/main/java/io/papermc/paper/PaperCommand.java
index ce061df7ad528757ef366860b26694a3b9a6f20f..803997c2238cceeb8d3c13f296962c29ff995b33 100644
--- a/src/main/java/io/papermc/paper/PaperCommand.java
+++ b/src/main/java/io/papermc/paper/PaperCommand.java
@@ -209,6 +209,7 @@ public class PaperCommand extends Command {
                 Collection<Entity> entities = world.entitiesById.values();
                 entities.forEach(e -> {
                     MinecraftKey key = e.getMinecraftKey();
+                    if (e.shouldBeRemoved) return; // Paper
 
                     MutablePair<Integer, Map<ChunkCoordIntPair, Integer>> info = list.computeIfAbsent(key, k -> MutablePair.of(0, Maps.newHashMap()));
                     ChunkCoordIntPair chunk = new ChunkCoordIntPair(e.chunkX, e.chunkZ);
diff --git a/src/main/java/net/minecraft/server/level/WorldServer.java b/src/main/java/net/minecraft/server/level/WorldServer.java
index 5247d1890e5f99b2b47255f1ef7c51e5b8b10f68..8d8af3c9b98737a6467570971b168f370075b9ce 100644
--- a/src/main/java/net/minecraft/server/level/WorldServer.java
+++ b/src/main/java/net/minecraft/server/level/WorldServer.java
@@ -1307,6 +1307,7 @@ public class WorldServer extends World implements GeneratorAccessSeed {
                 entity.origin = entity.getBukkitEntity().getLocation();
             }
             // Paper end
+            entity.shouldBeRemoved = false; // Paper - shouldn't be removed after being re-added
             new io.papermc.paper.event.entity.EntityAddToWorldEvent(entity.getBukkitEntity()).callEvent(); // Paper - fire while valid
         }
 
@@ -1319,6 +1320,7 @@ public class WorldServer extends World implements GeneratorAccessSeed {
             this.removeEntityFromChunk(entity);
             this.entitiesById.remove(entity.getId());
             this.unregisterEntity(entity);
+            entity.shouldBeRemoved = true; // Paper
         }
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 83815bc5d8e7f89a0eed55ac89b88fdaace82c8e..6c9598a1648c88c58a435798224d9ddf0f022054 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -276,6 +276,7 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, ne
     protected int numCollisions = 0; // Paper
     public void inactiveTick() { }
     // Spigot end
+    public boolean shouldBeRemoved; // Paper
 
     public float getBukkitYaw() {
         return this.yaw;
diff --git a/src/main/java/net/minecraft/world/level/chunk/Chunk.java b/src/main/java/net/minecraft/world/level/chunk/Chunk.java
index 1e15d031fedf2ea8687e94b80453f3ee5540894d..5a2af921bb367c73bb6432aca1f771bc08733d64 100644
--- a/src/main/java/net/minecraft/world/level/chunk/Chunk.java
+++ b/src/main/java/net/minecraft/world/level/chunk/Chunk.java
@@ -863,6 +863,7 @@ public class Chunk implements IChunkAccess {
 
             for (int i1 = 0; i1 < l; ++i1) {
                 Entity entity1 = (Entity) list1.get(i1);
+                if (entity1.shouldBeRemoved) continue; // Paper
 
                 if (entity1.getBoundingBox().c(axisalignedbb) && entity1 != entity) {
                     if (predicate == null || predicate.test(entity1)) {
@@ -900,6 +901,7 @@ public class Chunk implements IChunkAccess {
 
             while (iterator.hasNext()) {
                 T entity = (T) iterator.next(); // CraftBukkit - decompile error
+                if (entity.shouldBeRemoved) continue; // Paper
 
                 if ((entitytypes == null || entity.getEntityType() == entitytypes) && entity.getBoundingBox().c(axisalignedbb) && predicate.test(entity)) {
                     list.add(entity);
@@ -922,6 +924,7 @@ public class Chunk implements IChunkAccess {
 
             while (iterator.hasNext()) {
                 T t0 = (T) iterator.next(); // CraftBukkit - decompile error
+                if (t0.shouldBeRemoved) continue; // Paper
 
                 if (oclass.isInstance(t0) && t0.getBoundingBox().c(axisalignedbb) && (predicate == null || predicate.test(t0))) { // Spigot - instance check
                     list.add(t0);
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index 1bb6ed364cdde01fe54553cfad8ec4256789620b..24c80cf3820622297046abaa13205814b8178195 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -1046,6 +1046,7 @@ public class CraftWorld implements World {
         for (Object o : world.entitiesById.values()) {
             if (o instanceof net.minecraft.world.entity.Entity) {
                 net.minecraft.world.entity.Entity mcEnt = (net.minecraft.world.entity.Entity) o;
+                if (mcEnt.shouldBeRemoved) continue; // Paper
                 Entity bukkitEntity = mcEnt.getBukkitEntity();
 
                 // Assuming that bukkitEntity isn't null
@@ -1065,6 +1066,7 @@ public class CraftWorld implements World {
         for (Object o : world.entitiesById.values()) {
             if (o instanceof net.minecraft.world.entity.Entity) {
                 net.minecraft.world.entity.Entity mcEnt = (net.minecraft.world.entity.Entity) o;
+                if (mcEnt.shouldBeRemoved) continue; // Paper
                 Entity bukkitEntity = mcEnt.getBukkitEntity();
 
                 // Assuming that bukkitEntity isn't null
@@ -1091,6 +1093,7 @@ public class CraftWorld implements World {
 
         for (Object entity: world.entitiesById.values()) {
             if (entity instanceof net.minecraft.world.entity.Entity) {
+                if (((net.minecraft.world.entity.Entity) entity).shouldBeRemoved) continue; // Paper
                 Entity bukkitEntity = ((net.minecraft.world.entity.Entity) entity).getBukkitEntity();
 
                 if (bukkitEntity == null) {
@@ -1114,6 +1117,7 @@ public class CraftWorld implements World {
 
         for (Object entity: world.entitiesById.values()) {
             if (entity instanceof net.minecraft.world.entity.Entity) {
+                if (((net.minecraft.world.entity.Entity) entity).shouldBeRemoved) continue; // Paper
                 Entity bukkitEntity = ((net.minecraft.world.entity.Entity) entity).getBukkitEntity();
 
                 if (bukkitEntity == null) {
