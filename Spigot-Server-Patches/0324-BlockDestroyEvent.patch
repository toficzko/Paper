From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 6 Feb 2019 00:20:33 -0500
Subject: [PATCH] BlockDestroyEvent

Adds an event for when the server is going to destroy a current block,
potentially causing it to drop. This event can be cancelled to avoid
the block destruction, such as preventing signs from popping when
floating in the air.

This can replace many uses of BlockPhysicsEvent

diff --git a/src/main/java/net/minecraft/world/level/World.java b/src/main/java/net/minecraft/world/level/World.java
index 228a22f3b82e7fc8edabf5fbbaa3dc7db233a381..488b149a978e031eaed45512c400c77d92b18dcd 100644
--- a/src/main/java/net/minecraft/world/level/World.java
+++ b/src/main/java/net/minecraft/world/level/World.java
@@ -26,6 +26,7 @@ import net.minecraft.core.particles.ParticleParam;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.resources.MinecraftKey;
 import net.minecraft.resources.ResourceKey;
+import net.minecraft.server.MCUtil;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.level.EntityPlayer;
 import net.minecraft.server.level.PlayerChunk;
@@ -559,8 +560,20 @@ public abstract class World implements GeneratorAccess, AutoCloseable {
             return false;
         } else {
             Fluid fluid = this.getFluid(blockposition);
+            // Paper start - while the above setAir method is named same and looks very similar
+            // they are NOT used with same intent and the above should not fire this event. The above method is more of a BlockSetToAirEvent,
+            // it doesn't imply destruction of a block that plays a sound effect / drops an item.
+            boolean playEffect = true;
+            if (io.papermc.paper.event.block.BlockDestroyEvent.getHandlerList().getRegisteredListeners().length > 0) {
+                io.papermc.paper.event.block.BlockDestroyEvent event = new io.papermc.paper.event.block.BlockDestroyEvent(MCUtil.toBukkitBlock(this, blockposition), fluid.getBlockData().createCraftBlockData(), flag);
+                if (!event.callEvent()) {
+                    return false;
+                }
+                playEffect = event.playEffect();
+            }
+            // Paper end
 
-            if (!(iblockdata.getBlock() instanceof BlockFireAbstract)) {
+            if (playEffect && !(iblockdata.getBlock() instanceof BlockFireAbstract)) { // Paper
                 this.triggerEffect(2001, blockposition, Block.getCombinedId(iblockdata));
             }
 
