From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Thu, 9 Apr 2020 21:20:33 -0400
Subject: [PATCH] Don't move existing players to world spawn

This can cause a nasty server lag the spawn chunks are not kept loaded
or they aren't finished loading yet, or if the world spawn radius is
larger than the keep loaded range.

By skipping this, we avoid potential for a large spike on server start.

diff --git a/src/main/java/net/minecraft/server/level/EntityPlayer.java b/src/main/java/net/minecraft/server/level/EntityPlayer.java
index 071b7da23f6b423a37d3aaf82257c01133050729..0401fa1f329185f4c2f4e5c7fac440dd096fd4f0 100644
--- a/src/main/java/net/minecraft/server/level/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/level/EntityPlayer.java
@@ -253,7 +253,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         this.serverStatisticManager = minecraftserver.getPlayerList().getStatisticManager(this);
         this.advancementDataPlayer = minecraftserver.getPlayerList().f(this);
         this.G = 1.0F;
-        this.c(worldserver);
+        //this.c(worldserver); // Paper - don't move to spawn on login, only first join
         this.co = minecraftserver.a(this);
 
         this.cachedSingleHashSet = new io.papermc.paper.util.misc.PooledLinkedHashSets.PooledObjectLinkedOpenHashSet<>(this); // Paper
@@ -305,6 +305,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
     }
     // CraftBukkit end
 
+    public final void moveToSpawn(WorldServer worldserver) { c(worldserver); } // Paper - OBFHELPER
     private void c(WorldServer worldserver) {
         BlockPosition blockposition = worldserver.getSpawn();
 
@@ -482,7 +483,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
                 position = Vec3D.a(((WorldServer) world).getSpawn());
             }
             this.world = world;
-            this.setPosition(position.getX(), position.getY(), position.getZ());
+            this.setPositionRaw(position.getX(), position.getY(), position.getZ()); // Paper - don't register to chunks yet
         }
         this.playerInteractManager.a((WorldServer) world);
     }
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 590132b6e1bb80cdac630a95687e80cad3693157..6e086e98bfe65554ba1d1651677ea8b4c10c5d46 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -208,6 +208,8 @@ public abstract class PlayerList {
             worldserver1 = worldserver;
         }
 
+        if (nbttagcompound == null) entityplayer.moveToSpawn(worldserver1); // Paper - only move to spawn on first login, otherwise, stay where you are....
+
         entityplayer.spawnIn(worldserver1);
         entityplayer.playerInteractManager.a((WorldServer) entityplayer.world);
         String s1 = "local";
